@import './variables';

$themes: (
    darkTheme: (
        'text-color': $dark-primary-text,
        'bg-color': $dark-bg,
        'text-color-nav': $dark-secondary-text,
        'text-color-nav-hover': $light-text-link,
        'bg-color-nav': $dark-bg-card,
        'text-highlight': $highlight-dark,
        'text-muted': $text-muted-dark
    ),
    lightTheme: (
        'text-color': $light-text-color,
        'bg-color': $light-bg,
        'text-color-nav': $light-text-color-nav,
        'text-color-nav-hover': $light-text-link,
        'bg-color-nav': $light-bg-card,
        'text-highlight': $highlight,
        'text-muted': $text-muted
    )
);


@mixin theme() {
    @each $theme, $map in $themes {
        // $theme: darkTheme, lightTheme
        // $map: ('text-color': ..., 'bg-color': ...)

        // make the $map globally accessible, so that theme-get() can access it
        $theme-map: $map !global;

        // make a class for each theme using interpolation -> #{}
        // use & for making the theme class ancestor of the class
        // from which you use @include theme() {...}
        .#{$theme} & {
            @content;  // the content inside @include theme() {...}
        }
    }
    // no use of the variable $theme-map now
    $theme-map: null !global;
}

@function theme-get($key) {
    @return map-get($theme-map, $key);
}